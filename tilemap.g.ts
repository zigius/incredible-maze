// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level":
            case "level":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.builtin.forestTiles25], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex`1800180003070707070707070707070707070707070707070707070209010a01010101010101010101010101010101010101010609010a0101010a0a0a0a0101010a010a010a0101010a010609010a0101010a01010a0101010a010a010a0101010a010609010a0101010a01010a0101010a010a010a0101010a010609010a0a0a0a0a0a0a0a010a0a0a0a0a010a010a0a0a010609010101010101010101010101010101010101010101010609010a0a0a0a0a0a010a0a0a0a0a0a0a0a0a0a0a0a0a0a06090101010101010a010a0101010101010101010101010106090101010101010a010a010101010101010101010101010609010a0a0a0a0a0a010a010a0a0a0a0a0a0a0a0a0a0a010609010a0101010101010a010a0101010101010101010a010609010a010a0a0a0a0a0a010a010a0a0a0a0101010101010609010a01010101010101010a010a01010a0a0a0a0a0a010609010a01010101010101010a010a0101010101010101010609010a0a0a0a0a0a0a0a0a0a010a0101010101010101010609010a010101010101010101010a0a0a0a0a0a0a0a0a010609010a0101010101010101010101010101010101010a01060901010a010a0a0a0a0a010a010a010a0a0a01010a010a060901010a010a0101010a010a010a010a0101010a010a010609010a01010a0101010a0101010a010a01010a010a010a0609010101010a0101010a0101010a010a0101010a010a01060901010a0a0a0101010a0101010a010a0a0a01010a010106040808080808080808080808080808080808080808080805`, img`
222222222222222222222222
2.2....................2
2.2...2222...2.2.2...2.2
2.2...2..2...2.2.2...2.2
2.2...2..2...2.2.2...2.2
2.22222222.22222.2.222.2
2......................2
2.222222.222222222222222
2......2.2.............2
2......2.2.............2
2.222222.2.22222222222.2
2.2......2.2.........2.2
2.2.222222.2.2222......2
2.2........2.2..222222.2
2.2........2.2.........2
2.2222222222.2.........2
2.2..........222222222.2
2.2..............2...2.2
2..2.22222.2.2.222.2.2.2
2..2.2...2.2.2.222.2.2.2
2.2..2...2...2.222.2...2
2....2...2...2.222.22222
2..222...2...2.222.....2
222222222222222222222222
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.dungeon.greenInnerNorthEast,sprites.dungeon.greenInnerNorthWest,sprites.dungeon.greenInnerSouthWest,sprites.dungeon.greenInnerSouthEast,sprites.dungeon.greenOuterWest1,sprites.dungeon.greenOuterSouth1,sprites.dungeon.greenOuterNorth0,sprites.dungeon.greenOuterEast0,sprites.dungeon.floorLight0], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex`18001800030707070707070707070707070707070707070707070702090e1001010101010101010e010101010101010101010106090110010e01100a100a010101100110011001010110010609010a01010f10010110010101100110011001010e100106090e10010e010a010b0a010e01100b100110010101100106090e100a10100a100a100110101010100110011010100106090e010101010101010e0101010101010101010101010b06090110100a100a10010a0a0a0a0a0a0a0a100a0a0a0a0a0609010e0101010e10010a010e010101010101010101010e06090e010e0e0f010a010a0e01010f010e0101010e0101010609010a0a10100a10010a010a0a10100a0a0a10100a0a0106090f10010101010e0f0a010a010101010e0101010b100106090e0a010a0a0a0a0a0a01100e0a0a1010010e0101010e06090110010e010f0f0101010a010a010b100a0a0a100a0106090e0a01010101010f01010a010a0b0101010101010101060901100a0a10100a0a100a100e100e010101010101010e0609010a010e01010101010e010110100a0a0a0a10100a0106090e100101010f01010e01010e010b0101010e01010a010609010e0a010a0a0a0a0a010a010a010a0a0a01010a010a060901010a010a0c0c0c0a010a010f0b0a0101010a010a010609010a010e0a0c0d0c0a0101010a010a01010a010a010a06090e0e01010a0c0c0d0a01010b0a010a0101010a010a010609010e0a0a0a0c0d0c0a0101010a010a0a0a01010a010106040808080808080808080808080808080808080808080805`, img`
222222222222222222222222
2.2....................2
2.2...2222...2.2.2...2.2
2.2...2..2...2.2.2...2.2
2.2...2..2...2.2.2...2.2
2.22222222.22222.2.222.2
2......................2
2.222222.222222222222222
2......2.2.............2
2......2.2.............2
2.222222.2.22222222222.2
2.2......2.2.........2.2
2.2.222222.2.2222......2
2.2........2.2..222222.2
2.2........2.2.........2
2.2222222222.2.........2
2.2..........222222222.2
2.2............2.....2.2
2..2.22222.2.2.222.2.2.2
2..2.2...2.2.2.222.2.2.2
2.2..2...2...2.222.2...2
2....2...2...2.222.22222
2..222...2...2.222.....2
222222222222222222222222
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.dungeon.greenInnerNorthEast,sprites.dungeon.greenInnerNorthWest,sprites.dungeon.greenInnerSouthWest,sprites.dungeon.greenInnerSouthEast,sprites.dungeon.greenOuterWest1,sprites.dungeon.greenOuterSouth1,sprites.dungeon.greenOuterNorth0,sprites.dungeon.greenOuterEast0,sprites.dungeon.floorLight0,sprites.builtin.forestTiles0,sprites.castle.tileDarkGrass2,sprites.castle.tileDarkGrass3,sprites.castle.tileGrass1,sprites.castle.tileGrass3,sprites.builtin.brick], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "tile1":return tile1;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
